aliases:
  - &set-envs
    name: Set-Envs
    command: |
      if [ $CIRCLE_BRANCH == "master" ]; then echo 'export BASE_URL="$SW_PROD_BASE_URL"' >> $BASH_ENV; else echo 'export BASE_URL="$SW_BASE_URL"' >> $BASH_ENV; fi
      echo 'export CUSTOM_PUSH_BRANCH="$CIRCLE_BRANCH"' >> $BASH_ENV
  - &checkout
    name: Checkout
    command: |
      mkdir ~/.ssh/; \
      echo -e "Host github.com\n\tStrictHostKeyChecking no\n" > ~/.ssh/config && \ 
      echo -e "Host bitbucket.org\n\tStrictHostKeyChecking no\n" >> ~/.ssh/config && \
      git clone --depth=1 -b $CIRCLE_BRANCH $CIRCLE_REPOSITORY_URL ./ && \
      git reset --hard $CIRCLE_SHA1
  - &restore-yarn-cache
    keys:
      - yarn-{{ arch }}-{{ .Branch }}-{{ checksum "package.json" }}
  - &save-yarn-cache
    paths:
      - node_modules
      - ~/.cache/yarn
    key: yarn-{{ arch }}-{{ .Branch }}-{{ checksum "package.json" }}
  - &restore-react-native-cli
    keys:
      - react-native-cli-{{ arch }}
  - &save-react-native-cli
    paths:
      - node_modules
    key: react-native-cli-{{ arch }}
  - &restore-fastlane
    keys:
      - fastlane-{{ arch }}
  - &save-fastlane
    paths:
      - ~/.fastlane
    key: fastlane-{{ arch }}
  - &restore-gem-ios
    keys:
      - gem-{{ arch }}-{{ .Branch }}-{{ checksum "ios/Gemfile.lock" }}
      - gem-{{ arch }}-{{ .Branch }}-
      - gem-{{ arch }}-master-
  - &save-gem-ios
    paths:
      - ios/vendor/bundle
    key: gem-{{ arch }}-{{ .Branch }}-{{ checksum "ios/Gemfile.lock" }}
  - &restore-cocoapods
    keys:
      - cocoapods-{{ arch }}-{{ .Branch }}-{{ checksum "ios/Podfile.lock" }}
      - cocoapods-{{ arch }}-master-{{ checksum "ios/Podfile.lock" }}
  - &save-cocoapods
    paths:
      - ~/.cocoapods
      - ios/Pods
    key: cocoapods-{{ arch }}-{{ .Branch }}-{{ checksum "ios/Podfile.lock" }}
 
 
  - &install-react-native-cli
    name: Install react-native-cli
    command: yarn add react-native-cli
 
  - &install-fastlane-ios
    name: Install fastlane
    command: |
      brew update
      brew install ruby
      brew cask install fastlane
   
  - &install-fastlane-android
    name: Install fastlane
    command: gem install fastlane
 
  - &yarn
    name: Install Node Dependencies
    command: |
      yarn install --non-interactive --cache-folder ~/.cache/yarn
  
  - &install-gem-ios
    name: Install Gemfile
    command: |
      echo "ruby-2.4" > ~/.ruby-version
      cd ios
      bundle install --path vendor/bundle
 
  - &install-cocoapods
    name: Install CocoaPods
    command: |
      cd ios
      curl https://cocoapods-specs.circleci.com/fetch-cocoapods-repo-from-s3.sh | bash -s cf
      bundle exec pod install
 
  - &create-main-jsbundle
    name: Create a main.jsbundle
    command: |
      node ./node_modules/react-native-cli/index.js bundle \
      --dev false --platform ios \
      --entry-file ./index.js \
      --bundle-output ./ios/main.jsbundle

  - &build-and-sign-ios
    name: Build and Signing
    command: |
      cd ios && \
      bundle exec fastlane beta

version: 2.1
jobs:
  node-packages:
    working_directory: ~/project
    docker:
      - image: circleci/node:8
    steps:
      - checkout
      - restore_cache: *restore-yarn-cache
      - run: *yarn
      - save_cache: *save-yarn-cache
 
        #      - run:
        # name: Run unit tests
        # command: yarn test
 
      - persist_to_workspace:
          root: ~/project
          paths:
            - node_modules
      - store_test_results:
          path: ~/project/junit.xml
  build-ios:
    macos:
      xcode: "10.2.1"
    working_directory: ~/project
    environment:
      FL_OUTPUT_DIR: ~/project/output
    shell: /bin/bash --login -o pipefail
    steps:
      - run: *set-envs
      - run: *checkout
      
      - restore_cache: *restore-react-native-cli
      - run: *install-react-native-cli
      - save_cache: *save-react-native-cli
 
      - restore_cache: *restore-yarn-cache
      - run: *yarn
      - save_cache: *save-yarn-cache
 
      - restore_cache: *restore-gem-ios
      - run: *install-gem-ios
      - save_cache: *save-gem-ios
 
      # disabled caching due to its size > 500 Mb
      - run: *install-cocoapods
 
      - run: *create-main-jsbundle
 
      - run: *build-and-sign-ios

# -------------------------
#        WORK FLOWS
# -------------------------
workflows:
  version: 2.1
  test-build-deliver:
    jobs:
      - node-packages:
          filters:
            branches:
              only:
                - master
                - development
      - build-ios:
          requires:
            - node-packages
